{"ast":null,"code":"import _slicedToArray from \"/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/src/components/context/github/GithubState.js\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport GithubContext from \"./githubContext\";\nimport GithubReducer from \"./githubReducer\";\nimport { SEARCH_USERS, SET_LOADING, CLEAR_USERS, GET_USER, GET_REPOS } from \"../types\";\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GithubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Search Users\n\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setUsers(res.data.items);\n    dispatch({\n      type: SEARCH_USERS,\n      payload: red.data\n    });\n  }; //Get User\n  //Get Repos\n  //Clear Users\n  // Set Loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  }); // Making available to entire App\n\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/src/components/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","setUsers","data","items","type","payload","red","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,SACEC,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,QAJF,EAKEC,SALF,QAMO,UANP;;AAQA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,IAAI,EAAE,EAFa;AAGnBC,IAAAA,KAAK,EAAE,EAHY;AAInBC,IAAAA,OAAO,EAAE;AAJU,GAArB;;AAD2B,sBAQDf,UAAU,CAACG,aAAD,EAAgBQ,YAAhB,CART;AAAA;AAAA,QAQpBK,KARoB;AAAA,QAQbC,QARa,oBAU3B;;;AACA,QAAMC,WAAW,GAAG,MAAMC,IAAN,IAAc;AAChCC,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMC,GAAG,GAAG,MAAMpB,KAAK,CAACqB,GAAN,iDACyBH,IADzB,wBAEdI,OAAO,CAACC,GAAR,CAAYC,0BAFE,4BAGEF,OAAO,CAACC,GAAR,CAAYE,8BAHd,EAAlB;AAMAC,IAAAA,QAAQ,CAACN,GAAG,CAACO,IAAJ,CAASC,KAAV,CAAR;AAEAZ,IAAAA,QAAQ,CAAC;AACPa,MAAAA,IAAI,EAAE1B,YADC;AAEP2B,MAAAA,OAAO,EAAEC,GAAG,CAACJ;AAFN,KAAD,CAAR;AAID,GAfD,CAX2B,CA4B3B;AAEA;AAEA;AAEA;;;AACA,QAAMR,UAAU,GAAG,MAAMH,QAAQ,CAAC;AAAEa,IAAAA,IAAI,EAAEzB;AAAR,GAAD,CAAjC,CAnC2B,CAqC3B;;;AACA,SACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADR;AAELC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHR;AAILC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJV;AAKLG,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGR,KAAK,CAACuB,QATT,CADF;AAaD,CAnDD;;AAqDA,eAAexB,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport GithubContext from \"./githubContext\";\nimport GithubReducer from \"./githubReducer\";\n\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS\n} from \"../types\";\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  //Search Users\n  const searchUsers = async text => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setUsers(res.data.items);\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: red.data\n    });\n  };\n\n  //Get User\n\n  //Get Repos\n\n  //Clear Users\n\n  // Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  // Making available to entire App\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}