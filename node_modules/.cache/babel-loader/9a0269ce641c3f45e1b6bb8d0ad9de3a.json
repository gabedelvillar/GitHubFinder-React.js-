{"ast":null,"code":"import _slicedToArray from \"/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/src/App.js\";\nimport React, { useState, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Users from \"./components/users/Users\";\nimport User from \"./components/users/User\";\nimport Search from \"./components/users/Search\";\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport GithubState from \"./components/context/github/GithubState\";\nimport \"./App.css\";\n\nconst App = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        repos = _useState4[0],\n        setRepos = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alert = _useState8[0],\n        setAlert = _useState8[1]; // Get user's repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=5&sort=created:asc&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setRepos(res.data);\n    setLoading(false);\n  }; // Set Alert\n\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return React.createElement(GithubState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    alert: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Search, {\n      showAlert: showAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Users, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => React.createElement(User, Object.assign({}, props, {\n      getUserRepos: getUserRepos,\n      repos: repos,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/src/App.js"],"names":["React","useState","Fragment","axios","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","GithubState","App","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","getUserRepos","username","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","showAlert","msg","type","setTimeout","props"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Users from \"./components/users/Users\";\nimport User from \"./components/users/User\";\nimport Search from \"./components/users/Search\";\nimport Alert from \"./components/layout/Alert\";\nimport About from \"./components/pages/About\";\nimport GithubState from \"./components/context/github/GithubState\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  // Get user's repos\n  const getUserRepos = async username => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${\n        process.env.REACT_APP_GITHUB_CLIENT_ID\n      }&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  // Set Alert\n  const showAlert = (msg, type) => {\n    setAlert({ msg, type });\n\n    setTimeout(() => setAlert(null), 5000);\n  };\n\n  return (\n    <GithubState>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"container\">\n            <Alert alert={alert} />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={props => (\n                  <Fragment>\n                    <Search showAlert={showAlert} />\n                    <Users />\n                  </Fragment>\n                )}\n              />\n              <Route exact path=\"/about\" component={About} />\n              <Route\n                exact\n                path=\"/user/:login\"\n                render={props => (\n                  <User\n                    {...props}\n                    getUserRepos={getUserRepos}\n                    repos={repos}\n                    loading={loading}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GithubState>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}