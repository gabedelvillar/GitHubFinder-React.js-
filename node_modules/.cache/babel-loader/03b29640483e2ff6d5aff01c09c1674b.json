{"ast":null,"code":"import _slicedToArray from \"/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/src/components/users/Search.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GithubContext from \"../context/github/githubContext\";\n\nconst Search = ({\n  showAlert\n}) => {\n  const githubContext = useContext(GithubContext);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (text === \"\") {\n      showAlert(\"Please enter something\", \"light\");\n    } else {\n      githubContext.searchUsers(text);\n      setText(\"\");\n    }\n  };\n\n  const onChange = event => setText(event.target.value);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), githubContext.users.length > 0 && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.protoTypes = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  showAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/src/components/users/Search.jsx"],"names":["React","useState","useContext","PropTypes","GithubContext","Search","showAlert","githubContext","text","setText","onSubmit","event","preventDefault","searchUsers","onChange","target","value","users","length","clearUsers","protoTypes","func","isRequired","showClear","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAChC,QAAMC,aAAa,GAAGL,UAAU,CAACE,aAAD,CAAhC;;AADgC,oBAERH,QAAQ,CAAC,EAAD,CAFA;AAAA;AAAA,QAEzBO,IAFyB;AAAA,QAEnBC,OAFmB;;AAIhC,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIJ,IAAI,KAAK,EAAb,EAAiB;AACfF,MAAAA,SAAS,CAAC,wBAAD,EAA2B,OAA3B,CAAT;AACD,KAFD,MAEO;AACLC,MAAAA,aAAa,CAACM,WAAd,CAA0BL,IAA1B;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GATD;;AAWA,QAAMK,QAAQ,GAAGH,KAAK,IAAIF,OAAO,CAACE,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAjC;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,KAAK,EAAEF,IAJT;AAKE,IAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGP,aAAa,CAACU,KAAd,CAAoBC,MAApB,GAA6B,CAA7B,IACC;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CAxCD;;AA0CAd,MAAM,CAACe,UAAP,GAAoB;AAClBD,EAAAA,UAAU,EAAEhB,SAAS,CAACkB,IAAV,CAAeC,UADT;AAElBC,EAAAA,SAAS,EAAEpB,SAAS,CAACqB,IAAV,CAAeF,UAFR;AAGlBhB,EAAAA,SAAS,EAAEH,SAAS,CAACkB,IAAV,CAAeC;AAHR,CAApB;AAMA,eAAejB,MAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GithubContext from \"../context/github/githubContext\";\n\nconst Search = ({ showAlert }) => {\n  const githubContext = useContext(GithubContext);\n  const [text, setText] = useState(\"\");\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (text === \"\") {\n      showAlert(\"Please enter something\", \"light\");\n    } else {\n      githubContext.searchUsers(text);\n      setText(\"\");\n    }\n  };\n\n  const onChange = event => setText(event.target.value);\n\n  return (\n    <div>\n      <form onSubmit={onSubmit} className=\"form\">\n        <input\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"Search Users...\"\n          value={text}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Search\"\n          className=\"btn btn-dark btn-block\"\n        />\n      </form>\n      {githubContext.users.length > 0 && (\n        <button className=\"btn btn-light btn-block\" onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.protoTypes = {\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  showAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}