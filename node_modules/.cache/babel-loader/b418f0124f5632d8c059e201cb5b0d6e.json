{"ast":null,"code":"import _slicedToArray from \"/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/src/components/users/Search.jsx\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.text === \"\") {\n      this.props.setAlert(\"Please enter something\", \"light\");\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({\n        text: \"\"\n      });\n    }\n  };\n\n  const onChange = event => this.setText({\n    [event.target.name]: event.target.value\n  });\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: this.onSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: this.state.text,\n    onChange: this.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nSearch.protoTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/gdelvillar/Documents/FullStackJS/ReactFrontToBack2019/github-finder/src/components/users/Search.jsx"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","text","setText","onSubmit","event","preventDefault","state","props","setAlert","setState","onChange","target","name","value","protoTypes","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA;AAA1B,CAAD,KAA4C;AAAA,oBACjCL,QAAQ,CAAC,EAAD,CADyB;AAAA;AAAA,QAClDM,IADkD;AAAA,QAC5CC,OAD4C;;AAGzD,QAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,KAAKC,KAAL,CAAWL,IAAX,KAAoB,EAAxB,EAA4B;AAC1B,WAAKM,KAAL,CAAWC,QAAX,CAAoB,wBAApB,EAA8C,OAA9C;AACD,KAFD,MAEO;AACL,WAAKD,KAAL,CAAWT,WAAX,CAAuB,KAAKQ,KAAL,CAAWL,IAAlC;AACA,WAAKQ,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD;AACF,GATD;;AAWA,QAAMS,QAAQ,GAAGN,KAAK,IACpB,KAAKF,OAAL,CAAa;AAAE,KAACE,KAAK,CAACO,MAAN,CAAaC,IAAd,GAAqBR,KAAK,CAACO,MAAN,CAAaE;AAApC,GAAb,CADF;;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAE,KAAKV,QAArB;AAA+B,IAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,iBAHd;AAIE,IAAA,KAAK,EAAE,KAAKG,KAAL,CAAWL,IAJpB;AAKE,IAAA,QAAQ,EAAE,KAAKS,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAeGX,SAAS,IACR;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEC,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADF;AAuBD,CAxCD;;AA0CAH,MAAM,CAACiB,UAAP,GAAoB;AAClBhB,EAAAA,WAAW,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UADV;AAElBhB,EAAAA,UAAU,EAAEJ,SAAS,CAACmB,IAAV,CAAeC,UAFT;AAGlBjB,EAAAA,SAAS,EAAEH,SAAS,CAACqB,IAAV,CAAeD,UAHR;AAIlBR,EAAAA,QAAQ,EAAEZ,SAAS,CAACmB,IAAV,CAAeC;AAJP,CAApB;AAOA,eAAenB,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Search = ({ searchUsers, showClear, clearUsers }) => {\n  const [text, setText] = useState(\"\");\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.text === \"\") {\n      this.props.setAlert(\"Please enter something\", \"light\");\n    } else {\n      this.props.searchUsers(this.state.text);\n      this.setState({ text: \"\" });\n    }\n  };\n\n  const onChange = event =>\n    this.setText({ [event.target.name]: event.target.value });\n\n  return (\n    <div>\n      <form onSubmit={this.onSubmit} className=\"form\">\n        <input\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"Search Users...\"\n          value={this.state.text}\n          onChange={this.onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Search\"\n          className=\"btn btn-dark btn-block\"\n        />\n      </form>\n      {showClear && (\n        <button className=\"btn btn-light btn-block\" onClick={clearUsers}>\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.protoTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}